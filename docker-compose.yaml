version: '3.8'

services:
  keycloak_db:
    image: postgres:14
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak_user
      POSTGRES_PASSWORD: keycloak_password
    volumes:
      - ./postgres-keycloak-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    healthcheck:
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:8080/health/ready']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak_db:5432/keycloak_db
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: keycloak_password
    command: 
      - start-dev
      - --health-enabled=true
      - --import-realm
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    ports:
      - "8082:8080"
    depends_on:
      - keycloak_db
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3100:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8085/api/v1
      REACT_APP_KEYCLOAK_URL: http://localhost:8082
      REACT_APP_KEYCLOAK_REALM: reports-realm
      REACT_APP_KEYCLOAK_CLIENT_ID: reports-frontend
  api:
    build: 
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8085:8000"
    depends_on:
      keycloak:
        condition: service_healthy
        restart: true
    environment:
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: reports-realm
      KEYCLOAK_CLIENT_ID: reports-api